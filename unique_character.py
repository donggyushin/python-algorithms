"""
이번 시간에 배워볼 알고리즘은 unique character string 입니다. 
'abcde' 처럼 주어진 문자열이 모두 유니크한 문자들로만 이루어져있다면 True 를, 그렇지 않다면 False 를 반환해주는 알고리즘입니다. 
"""


"""
이 알고리즘 솔루션의 핵심 키는 데이터 스트럭쳐인 set을 활용하는 것입니다. 
이렇게 중복없이 유니크한 알고리즘 문제들의 대부분은 set 자료형을 이용하면 아주 쉽게 풀리는 경우가 많기 때문에, 
문제 안에 '중복 없이' 라는 말이 들어간다면 가장 먼저 set 자료형을 생각해주세요. dictionary 자료형과 더불어서 가장 많이 이용되는 자료형입니다. 


우선 파이썬의 내장 함수들로만 이용해서 단 한줄 만으로 문제를 풀어볼게요
"""


def unique_char(s: str) -> bool:

    return len(set(s)) == len(s)
# 이렇게 주어진 문자열을 중복이 없는 자료형인 set 자료형으로 변환시켜준 후에 서로의 길이를 비교해보았을때
# 길이가 서로 같다면 모두 유니트한 문자들로만 이루어진 문자열이었겠죠?


# 두번째는 set 자료형을 이용해서 조금 더 논리적으로 접근해보도록 하겠습니다.

def uni_char2(s: str) -> bool:
    # 우선 set 자료형인 char 을 선언해주구,
    char = set()
    # 전달 받은 문자열을 반복문으로 돌아서 각각 문자가 char에 들어있는지 안들어있는지 확인해줍니다.
    # 안들어있다면 char 자료형에 넣어주고, 들어있다면 이미 이전에 똑같은 문자가 들어왔다는 뜻이므로
    # 바로 False를 반환해줍니다.
    # 해당 for문을 모두 돌았다면 해당 문자열은 유니트한 문자들로만 이루어져 있다는 뜻이기 때문에 True를 반환해줍니다.
    for letter in s:
        if letter in char:
            return False
        else:
            char.add(letter)

    return True


print(uni_char2('abcdef'))
